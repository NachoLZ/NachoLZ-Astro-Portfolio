---
import LinkButton from "./LinkButton.astro";
import GitHub from "./icons/GitHub.astro";
import Link from "./icons/Link.astro";
import { getI18N } from "../i18n";

interface Props {
  experience: {
    title: string;
    company: string;
    description: string;
    link?: string;
    date: string;
    image?: string;
    tags?: Array<{
      name: string;
      class: string;
      icon: any;
    }>;
    github?: string;
    images: any[];
  };
}

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
const { experience } = Astro.props;
const { title, company, description, link, date, image, tags, github, images } =
  experience;

const hasCarouselImages = images.length > 0;
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class="text-yellow-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold text-yellow-400">{title}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">
        {company}
      </h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80"
        >{date}</time
      >
    </div>
  </div>
  <div
    class="relative flex flex-col gap-4 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3"
  >
    <!-- Image Preview Section -->
    {
      image && (
        <div class="w-full">
          {hasCarouselImages ? (
            <div id="carouselTargetList">
              <a
                href="#"
                class="block"
                onclick={`event.preventDefault(); document.dispatchEvent(new CustomEvent('open-carousel', { detail: { galleryId: '${company}' } }))`}
              >
                <div class="relative flex flex-col transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl hover:-translate-y-1 hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50 cursor-pointer">
                  <img
                    alt={`${title} at ${company}`}
                    class="object-cover object-top w-full h-48 transition duration-500 sm:h-56 hover:scale-105"
                    loading="lazy"
                    src={image}
                  />
                  <div class="absolute inset-0 bg-black bg-opacity-0 hover:bg-opacity-10 transition-all duration-300 rounded-xl flex items-center justify-center">
                    <div class="opacity-0 hover:opacity-100 transition-opacity duration-300 bg-black bg-opacity-75 text-white px-3 py-1 rounded-full text-sm">
                      {i18n.misc.gallery} ({images.length} {i18n.misc.photo})
                    </div>
                  </div>
                </div>
              </a>
            </div>
          ) : (
            <div class="relative flex flex-col items-center gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl hover:-translate-y-1 hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
              <img
                alt={`${title} at ${company}`}
                class="object-cover object-top w-full h-48 transition duration-500 sm:h-56 hover:scale-105"
                loading="lazy"
                src={image}
              />
            </div>
          )}
        </div>
      )
    }

    <!-- Technology Tags -->
    {
      tags && tags.length > 0 && (
        <div class="flex flex-wrap gap-2">
          <ul class="flex flex-row flex-wrap gap-2">
            {tags.map((tag) => (
              <li>
                <span
                  class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
                >
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </ul>
        </div>
      )
    }

    <!-- Description -->
    <div class="text-gray-600 dark:text-gray-300">{description}</div>

    <!-- Action Buttons -->
    <footer class="flex items-end justify-start gap-x-4">
      {
        github && (
          <LinkButton href={github}>
            <GitHub class="size-6" />
            Code
          </LinkButton>
        )
      }
      {
        link && (
          <LinkButton href={link}>
            <Link class="size-4" />
            Preview
          </LinkButton>
        )
      }
    </footer>
  </div>
</div>
